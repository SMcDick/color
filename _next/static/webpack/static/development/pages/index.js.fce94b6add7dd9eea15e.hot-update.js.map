{"version":3,"file":"static/webpack/static/development/pages/index.js.fce94b6add7dd9eea15e.hot-update.js","sources":["webpack:///./components/PaletteModal.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport OutsideClickHandler from \"react-outside-click-handler\"\nimport kebabCase from \"lodash/kebabCase\"\nimport camelCase from \"lodash/camelCase\"\nimport { js, css } from \"js-beautify\"\n\nconst PaletteModal = ({ palette, togglePaletteModal, isOpen }) => {\n  const [data, setData] = useState([])\n  const [activeTab, setActiveTab] = useState(\"json\")\n\n  useEffect(() => {\n    fetchColorData(palette)\n  }, [])\n\n  const handleActiveTab = tabName => () => setActiveTab(tabName)\n\n  const fetchColorData = async palette => {\n    const paletteString = palette.map(p => p.substr(1)).join(\",\")\n\n    const res = await fetch(`https://api.color.pizza/v1/${paletteString}`)\n    const { colors } = await res.json()\n\n    const newData = colors.map(c => ({ name: c.name, hex: c.requestedHex }))\n    setData(newData)\n  }\n\n  const formatAsJson = () => {\n    return JSON.stringify(data, null, \"  \")\n  }\n\n  const formatAsCSS = () => {\n    return `:root {\n  ${data\n    .map(d => `--${kebabCase(d.name)}: ${d.hex};\\n`)\n    .join(\"\")\n    .trim()}\n}`\n  }\n\n  const formatAsSass = () =>\n    data\n      .map(d => `$${kebabCase(d.name)}: ${d.hex};\\n`)\n      .join(\"\")\n      .trim()\n\n  const formatAsJS = () => `{\n  ${data\n    .map(d => `${camelCase(d.name)}: \"${d.hex}\"`)\n    .join(\",\")\n    .trim()}\n}`\n\n  const handleSelectAll = e => {\n    e.target.select()\n  }\n\n  return isOpen ? (\n    <Div\n      position=\"fixed\"\n      width={1}\n      height=\"100vh\"\n      px={6}\n      py={4}\n      css={{ backgroundColor: \"rgba(0,0,0,0.4)\", top: 0, left: 0, zIndex: 5 }}\n    >\n      <OutsideClickHandler onOutsideClick={() => togglePaletteModal(false)}>\n        <Flex position=\"absolute\" bg=\"white\" flexWrap=\"wrap\" p={4} borderRadius={2}>\n          <TextButton fontWeight={700} onClick={() => togglePaletteModal(false)} ml='auto'>Close</TextButton>\n          <Div width={1} mx={-3}>\n            <TextButton px={3} onClick={handleActiveTab(\"json\")}>JSON</TextButton>\n            <TextButton px={3} onClick={handleActiveTab(\"css\")}>CSS variables</TextButton>\n            <TextButton px={3} onClick={handleActiveTab(\"sass\")}>Sass variables</TextButton>\n            <TextButton px={3} onClick={handleActiveTab(\"js\")}>JS theme file</TextButton>\n          </Div>\n\n          {activeTab === \"json\" && (\n            <Div width={1}>\n              <Textarea\n                width={1}\n                bg='gray.9'\n                style={{minHeight: '16rem', border: '1px solid black'}}\n                p={4}\n                onClick={handleSelectAll}\n                readOnly\n                value={formatAsJson()}\n              />\n            </Div>\n          )}\n\n          {activeTab === \"css\" && (\n            <Div>\n              <Textarea\n                onClick={handleSelectAll}\n                readOnly\n                value={css(formatAsCSS())}\n              />\n            </Div>\n          )}\n\n          {activeTab === \"sass\" && (\n            <Div>\n              <Textarea\n                onClick={handleSelectAll}\n                readOnly\n                value={css(formatAsSass())}\n              />\n            </Div>\n          )}\n\n          {activeTab === \"js\" && (\n            <Div>\n              <Textarea\n                onClick={handleSelectAll}\n                readOnly\n                value={js(formatAsJS())}\n              />\n            </Div>\n          )}\n        </Flex>\n      </OutsideClickHandler>\n    </Div>\n  ) : null\n}\n\nexport default PaletteModal\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AADA;AAAA;AACA;AADA;AAGA;AAHA;AAAA;AACA;AADA;AAAA;AAIA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AAAA;AAFA;AACA;AAKA;AAAA;AAEA;AAAA;AAFA;AACA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AALA;AAMA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;;A","sourceRoot":""}