{"version":3,"file":"static/webpack/static/development/pages/index.js.8ed212cc3f53d1341969.hot-update.js","sources":["webpack:///./components/Logo.js","webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\"\nimport theme from \"../theme\"\n\nconst Logo = ({ variant, ...props}) => {\n  const textColor = props.light\n    ? theme.colors.white\n    : theme.colors.marketing.gray[0]\n\n  switch (variant) {\n    case 'default':\n      return (\n      <Svg viewBox=\"4 0 102 40\" maxWidth=\"6rem\">\n        <Path\n          fill={theme.colors.white}\n          d=\"M98.6 14.2L93 12.9l-1-.4-25.7.2v12.4l32.3.1z\"\n        />\n        <Path\n          fill={theme.colors.marketing.orange}\n          d=\"M88.1 24c.3-1 .2-2-.3-2.6-.5-.6-1.2-1-2.1-1.1l-17.4-.2c-.1 0-.2-.1-.3-.1-.1-.1-.1-.2 0-.3.1-.2.2-.3.4-.3l17.5-.2c2.1-.1 4.3-1.8 5.1-3.8l1-2.6c0-.1.1-.2 0-.3-1.1-5.1-5.7-8.9-11.1-8.9-5 0-9.3 3.2-10.8 7.7-1-.7-2.2-1.1-3.6-1-2.4.2-4.3 2.2-4.6 4.6-.1.6 0 1.2.1 1.8-3.9.1-7.1 3.3-7.1 7.3 0 .4 0 .7.1 1.1 0 .2.2.3.3.3h32.1c.2 0 .4-.1.4-.3l.3-1.1z\"\n        />\n        <Path\n          fill={theme.colors.marketing.lightOrange}\n          d=\"M93.6 12.8h-.5c-.1 0-.2.1-.3.2l-.7 2.4c-.3 1-.2 2 .3 2.6.5.6 1.2 1 2.1 1.1l3.7.2c.1 0 .2.1.3.1.1.1.1.2 0 .3-.1.2-.2.3-.4.3l-3.8.2c-2.1.1-4.3 1.8-5.1 3.8l-.2.9c-.1.1 0 .3.2.3h13.2c.2 0 .3-.1.3-.3.2-.8.4-1.7.4-2.6 0-5.2-4.3-9.5-9.5-9.5\"\n        />\n        <Path\n          fill={textColor}\n          d=\"M104.4 30.8c-.5 0-.9-.4-.9-.9s.4-.9.9-.9.9.4.9.9-.4.9-.9.9m0-1.6c-.4 0-.7.3-.7.7 0 .4.3.7.7.7.4 0 .7-.3.7-.7 0-.4-.3-.7-.7-.7m.4 1.2h-.2l-.2-.3h-.2v.3h-.2v-.9h.5c.2 0 .3.1.3.3 0 .1-.1.2-.2.3l.2.3zm-.3-.5c.1 0 .1 0 .1-.1s-.1-.1-.1-.1h-.3v.3h.3zM14.8 29H17v6h3.8v1.9h-6zM23.1 32.9c0-2.3 1.8-4.1 4.3-4.1s4.2 1.8 4.2 4.1-1.8 4.1-4.3 4.1c-2.4 0-4.2-1.8-4.2-4.1m6.3 0c0-1.2-.8-2.2-2-2.2s-2 1-2 2.1.8 2.1 2 2.1c1.2.2 2-.8 2-2M34.3 33.4V29h2.2v4.4c0 1.1.6 1.7 1.5 1.7s1.5-.5 1.5-1.6V29h2.2v4.4c0 2.6-1.5 3.7-3.7 3.7-2.3-.1-3.7-1.2-3.7-3.7M45 29h3.1c2.8 0 4.5 1.6 4.5 3.9s-1.7 4-4.5 4h-3V29zm3.1 5.9c1.3 0 2.2-.7 2.2-2s-.9-2-2.2-2h-.9v4h.9zM55.7 29H62v1.9h-4.1v1.3h3.7V34h-3.7v2.9h-2.2zM65.1 29h2.2v6h3.8v1.9h-6zM76.8 28.9H79l3.4 8H80l-.6-1.4h-3.1l-.6 1.4h-2.3l3.4-8zm2 4.9l-.9-2.2-.9 2.2h1.8zM85.2 29h3.7c1.2 0 2 .3 2.6.9.5.5.7 1.1.7 1.8 0 1.2-.6 2-1.6 2.4l1.9 2.8H90l-1.6-2.4h-1v2.4h-2.2V29zm3.6 3.8c.7 0 1.2-.4 1.2-.9 0-.6-.5-.9-1.2-.9h-1.4v1.9h1.4zM95.3 29h6.4v1.8h-4.2V32h3.8v1.8h-3.8V35h4.3v1.9h-6.5zM10 33.9c-.3.7-1 1.2-1.8 1.2-1.2 0-2-1-2-2.1s.8-2.1 2-2.1c.9 0 1.6.6 1.9 1.3h2.3c-.4-1.9-2-3.3-4.2-3.3-2.4 0-4.3 1.8-4.3 4.1s1.8 4.1 4.2 4.1c2.1 0 3.7-1.4 4.2-3.2H10z\"\n        />\n      </Svg>\n\n      )\n    case inline:\n      return (\n      <Svg viewBox=\"0 0 1179.5 271.2\" maxWidth=\"12rem\">\n        <g>\n          <polygon\n            fill={textColor}\n            points=\"503.2,155.6 518.7,155.6 518.7,198.1 545.9,198.1 545.9,211.7 503.2,211.7   \"\n          />\n          <Path\n            fill={textColor}\n            d=\"M562,183.8v-0.2c0-16.1,13-29.2,30.3-29.2c17.3,0,30.1,12.9,30.1,29v0.2c0,16.1-13,29.2-30.3,29.2    C574.8,212.9,562,200,562,183.8 M606.5,183.8v-0.2c0-8.1-5.8-15.1-14.4-15.1c-8.5,0-14.2,6.9-14.2,15v0.2    c0,8.1,5.8,15.1,14.3,15.1C600.9,198.8,606.5,191.9,606.5,183.8\"\n          />\n          <Path\n            fill={textColor}\n            d=\"M641.4,187.1v-31.5h15.8v31.2c0,8.1,4.1,11.9,10.3,11.9c6.2,0,10.3-3.7,10.3-11.5v-31.6h15.8v31.1    c0,18.1-10.3,26-26.3,26C651.5,212.8,641.4,204.7,641.4,187.1\"\n          />\n          <Path\n            fill={textColor}\n            d=\"M717.5,155.6h21.6c20,0,31.7,11.5,31.7,27.7v0.2c0,16.2-11.8,28.2-32,28.2h-21.3V155.6z M739.4,198    c9.3,0,15.5-5.1,15.5-14.2v-0.2c0-9-6.2-14.2-15.5-14.2H733V198H739.4z\"\n          />\n          <polygon\n            fill={textColor}\n            points=\"793.4,155.6 838.2,155.6 838.2,169.3 808.9,169.3 808.9,178.8 835.4,178.8 835.4,191.7 808.9,191.7     808.9,211.7 793.4,211.7   \"\n          />\n          <polygon\n            fill={textColor}\n            points=\"859.9,155.6 875.4,155.6 875.4,198.1 902.6,198.1 902.6,211.7 859.9,211.7   \"\n          />\n          <Path\n            fill={textColor}\n            d=\"M943.2,155.2h15l23.9,56.5h-16.7l-4.1-10h-21.6l-4,10h-16.3L943.2,155.2z M956.8,189.6l-6.2-15.9l-6.3,15.9    H956.8z\"\n          />\n          <Path\n            fill={textColor}\n            d=\"M1002.1,155.6h26.5c8.6,0,14.5,2.2,18.3,6.1c3.3,3.2,5,7.5,5,13.1v0.2c0,8.6-4.6,14.3-11.5,17.2l13.4,19.6    h-18l-11.3-17h-6.8v17h-15.5V155.6z M1027.9,182.6c5.3,0,8.3-2.6,8.3-6.7v-0.2c0-4.4-3.2-6.7-8.4-6.7h-10.2v13.5H1027.9z\"\n          />\n          <polygon\n            fill={textColor}\n            points=\"1074.3,155.6 1119.4,155.6 1119.4,168.9 1089.7,168.9 1089.7,177.4 1116.6,177.4 1116.6,189.6     1089.7,189.6 1089.7,198.5 1119.8,198.5 1119.8,211.7 1074.3,211.7   \"\n          />\n          <Path\n            fill={textColor}\n            d=\"M469.1,190.4c-2.2,4.9-6.8,8.4-12.8,8.4c-8.5,0-14.3-7.1-14.3-15.1v-0.2c0-8.1,5.7-15,14.2-15    c6.4,0,11.3,3.9,13.3,9.3h16.4c-2.6-13.4-14.4-23.3-29.6-23.3c-17.3,0-30.3,13.1-30.3,29.2v0.2c0,16.1,12.8,29,30.1,29    c14.8,0,26.4-9.6,29.4-22.4H469.1z\"\n          />\n        </g>\n        <g>\n          <Path\n            id=\"flare\"\n            fill={theme.colors.white}\n            d=\"M370.9,150.2l-40.7-24.7c-0.6-0.1-4.4,0.3-6.4-0.7c-1.4-0.7-2.5-1.9-3.2-4c-3.2,0-175.5,0-175.5,0    v91.8h225.8V150.2z\"\n          />\n\n          <Path\n            fill={theme.colors.lightOrange}\n            d=\"M328.6,125.6c-0.8,0-1.5,0.6-1.8,1.4l-4.8,16.7c-2.1,7.2-1.3,13.8,2.2,18.7    c3.2,4.5,8.6,7.1,15.1,7.4l26.2,1.6c0.8,0,1.5,0.4,1.9,1c0.4,0.6,0.5,1.5,0.3,2.2c-0.4,1.2-1.6,2.1-2.9,2.2l-27.3,1.6    c-14.8,0.7-30.7,12.6-36.3,27.2l-2,5.1c-0.4,1,0.3,2,1.4,2h93.8c1.1,0,2.1-0.7,2.4-1.8c1.6-5.8,2.5-11.9,2.5-18.2    c0-37-30.2-67.2-67.3-67.2C330.9,125.5,329.7,125.5,328.6,125.6z\"\n          />\n\n          <Path\n            id=\"left-cloud\"\n            fill={theme.colors.orange}\n            d=\"M292.8,204.4c2.1-7.2,1.3-13.8-2.2-18.7c-3.2-4.5-8.6-7.1-15.1-7.4l-123.1-1.6    c-0.8,0-1.5-0.4-1.9-1s-0.5-1.4-0.3-2.2c0.4-1.2,1.6-2.1,2.9-2.2l124.2-1.6c14.7-0.7,30.7-12.6,36.3-27.2l7.1-18.5    c0.3-0.8,0.4-1.6,0.2-2.4c-8-36.2-40.3-63.2-78.9-63.2c-35.6,0-65.8,23-76.6,54.9c-7-5.2-15.9-8-25.5-7.1    c-17.1,1.7-30.8,15.4-32.5,32.5c-0.4,4.4-0.1,8.7,0.9,12.7c-27.9,0.8-50.2,23.6-50.2,51.7c0,2.5,0.2,5,0.5,7.5    c0.2,1.2,1.2,2.1,2.4,2.1h227.2c1.3,0,2.5-0.9,2.9-2.2L292.8,204.4z\"\n          />\n        </g>\n      </Svg>\n\n      )\n    case mark:\n      return (\n      <Svg viewBox=\"0 0 341.2 154.3\" {...props}><title>Cloudflare Logo Mark</title><g id=\"Layer_2\"><g id=\"Layer_1-2\"><Polygon color='white' points=\"312.8 91.7 269.9 67.1 262.5 63.9 87 65.1 87 154.2 312.8 154.2 312.8 91.7\"/><Path color=\"#f38020\" d=\"M234.7,146c2.1-7.2,1.3-13.8-2.2-18.7-3.2-4.5-8.6-7.1-15.1-7.4L94.3,118.3a2.28,2.28,0,0,1-1.9-1,2.76,2.76,0,0,1-.3-2.2,3.38,3.38,0,0,1,2.9-2.2l124.2-1.6c14.7-.7,30.7-12.6,36.3-27.2l7.1-18.5a4,4,0,0,0,.2-2.4,80.87,80.87,0,0,0-155.5-8.3,36.35,36.35,0,0,0-58,25.4A38.18,38.18,0,0,0,50.2,93,51.66,51.66,0,0,0,0,144.7a63,63,0,0,0,.5,7.5,2.46,2.46,0,0,0,2.4,2.1H230.1a3.09,3.09,0,0,0,2.9-2.2Z\"/><Path color=\"faae40\" d=\"M273.9,66.9c-1.1,0-2.3,0-3.4.1a2,2,0,0,0-1.8,1.4l-4.8,16.7c-2.1,7.2-1.3,13.8,2.2,18.7,3.2,4.5,8.6,7.1,15.1,7.4l26.2,1.6a2.28,2.28,0,0,1,1.9,1,2.82,2.82,0,0,1,.3,2.2,3.38,3.38,0,0,1-2.9,2.2l-27.3,1.6c-14.8.7-30.7,12.6-36.3,27.2l-2,5.1a1.44,1.44,0,0,0,1.4,2h93.8a2.46,2.46,0,0,0,2.4-1.8,68.35,68.35,0,0,0,2.5-18.2,67.37,67.37,0,0,0-67.3-67.2\"/></g></g></Svg>\n\n      )\n  }\n}\n\nexport default Logo\n","import React, { useState, useEffect } from \"react\"\nimport { get as getIdb, set as setIdb } from \"idb-keyval\"\nimport palx from \"palx\"\nimport OutsideClickHandler from \"react-outside-click-handler\"\nimport useHistory from \"../utils/useHistory\"\nimport useInterval from \"../utils/useInterval\"\nimport isEmpty from \"lodash/isEmpty\"\nimport isArray from \"lodash/isArray\"\nimport uniqWith from \"lodash/uniqWith\"\nimport isEqual from \"lodash/isEqual\"\nimport toNumber from \"lodash/toNumber\"\nimport reduce from \"lodash/reduce\"\nimport findKey from \"lodash/findKey\"\nimport debounce from \"lodash/debounce\"\nimport theme from \"../theme\"\n\nimport defaultPalette from \"../utils/defaultPalette\"\nimport generateRandomPalette from \"../utils/generateRandomPalette\"\nimport sortPalette from \"../utils/sortPalette\"\nimport getAllCombos from \"../utils/getAllCombos\"\nimport getContrastScore from \"../utils/getContrastScore\"\n\nimport Preview from \"../components/Preview\"\nimport PlayerControls from \"../components/PlayerControls\"\nimport Colorbox from \"../components/Colorbox\"\nimport ColorTable from \"../components/ColorTable\"\nimport isHex from \"../utils/isHex\"\n\nconst resetPinned = {\n  color: false,\n  bg: false,\n  borderColor: false,\n  parentBg: false\n}\n\nconst debouncedUpdateCombos = debounce(\n  (updatedPalette, contrastRatio, setAvailableCombos) => {\n    const availableCombos = getAllCombos(updatedPalette, contrastRatio)\n    setAvailableCombos(availableCombos)\n  },\n  500\n)\n\nconst MainUI = ({\n  palette,\n  setPalette,\n  availableCombos,\n  setAvailableCombos,\n  onShowCombinations\n}) => {\n  const [paletteModalIsOpen, togglePaletteModal] = useState(false)\n  const [likes, updateLikes] = useState([])\n  const [contrastRatio, setContrastRatio] = useState(4.5)\n  const [colorFilter, setColorFilter] = useState(\"none\")\n  const [paletteImage, setPaletteImage] = useState(null)\n  const [imageLoading, setImageLoading] = useState(false)\n  const [imageName, setImageName] = useState(\"\")\n  const [currentState, { set, undo, redo, canRedo, canUndo }] = useHistory({})\n  const { present: currentCombination } = currentState\n  const [pinnedColors, setPinnedColors] = useState(resetPinned)\n  const [borderWidth, setBorderWidth] = useState(0)\n  const [boxPadding, setBoxPadding] = useState(64)\n  const [palxColor, setPalxColor] = useState(\"#07c\")\n  const [currentPickerColor, setPickerColor] = useState({\n    color: null,\n    index: null\n  })\n  const [currentComboProp, setCurrentComboProp] = useState(null)\n  const [activeTab, setActiveTab] = useState(\"url\")\n  const [importValue, setImportValue] = useState(JSON.stringify(palette))\n  const [importError, setImportError] = useState(false)\n  const { start, stop, isRunning } = useInterval({\n    duration: 3000,\n    startImmediate: true,\n    callback: () => {\n      const newCombo = generateRandomPalette(\n        palette,\n        pinnedColors,\n        currentCombination,\n        availableCombos\n      )\n      set(newCombo)\n    }\n  })\n\n  useEffect(() => {\n    getIdb(\"likes\").then(likes => {\n      likes && updateLikes(likes)\n    })\n\n    const starterCombination = generateRandomPalette(\n      palette,\n      pinnedColors,\n      currentCombination,\n      availableCombos\n    )\n\n    set(starterCombination)\n  }, [])\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress)\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress)\n    }\n  })\n\n  const handleAutoCycling = () => {\n    isRunning ? stop() : start()\n  }\n\n  const handleLike = async () => {\n    const currentLikes = await likes\n\n    const deDuped = uniqWith([...currentLikes, currentCombination], isEqual)\n    updateLikes(deDuped)\n    await setIdb(\"likes\", deDuped)\n  }\n\n  const handleRemoveLike = async index => {\n    const newLikes = likes.filter((_, i) => index !== i)\n    updateLikes(newLikes)\n    await setIdb(\"likes\", newLikes)\n  }\n\n  const handleClearLikes = async () => {\n    updateLikes([])\n    await setIdb(\"likes\", [])\n  }\n\n  const handleNext = () => {\n    if (canRedo) {\n      return redo()\n    }\n    isRunning && stop()\n    const newCombo = generateRandomPalette(\n      palette,\n      pinnedColors,\n      currentCombination,\n      availableCombos\n    )\n    set(newCombo)\n  }\n\n  const handlePrevious = () => {\n    if (canUndo) {\n      stop()\n      undo()\n    }\n  }\n\n  const handleViewLike = index => {\n    isRunning && stop()\n    set(likes[index])\n  }\n\n  const handleRemoveColor = color => {\n    const alteredPalette = palette.filter(c => c !== color)\n    setPalette(alteredPalette)\n    setPickerColor({\n      color: null,\n      index: null\n    })\n  }\n\n  const handleAddColor = () => {\n    const newPalette = [...palette, \"#000000\"]\n    setPalette(newPalette)\n    setPickerColor({ color: \"#000000\", index: newPalette.length - 1 })\n  }\n\n  const handleKeyPress = ({ key }) => {\n    switch (key) {\n      case \"ArrowUp\":\n        handleLike()\n        break\n      case \"ArrowRight\":\n        handleNext()\n        break\n      case \"ArrowLeft\":\n        handlePrevious()\n        break\n    }\n  }\n\n  const handleColorBlindFilter = e => setColorFilter(e.target.value)\n\n  const handleSiteFetch = async palette => {\n    setPalette(palette)\n    setPinnedColors(resetPinned)\n    const availableCombos = getAllCombos(palette, contrastRatio)\n    setAvailableCombos(availableCombos)\n    const newCombo = generateRandomPalette(\n      palette,\n      resetPinned,\n      null,\n      availableCombos\n    )\n    set(newCombo)\n  }\n\n  const handleClearPalette = () => {\n    const clearedPalette = [\"#000000\", \"#FFFFFF\", \"#2c7cb0\", \"#757575\"]\n    setPalette(clearedPalette)\n    const availableCombos = getAllCombos(clearedPalette, contrastRatio)\n    setAvailableCombos(availableCombos)\n    const newCombo = generateRandomPalette(\n      clearedPalette,\n      resetPinned,\n      null,\n      availableCombos\n    )\n    set(newCombo)\n    setImageName(new Date())\n    setPaletteImage(\"\")\n  }\n\n  const handlePinColor = key => () => {\n    setPinnedColors(prevState => ({ ...prevState, [key]: !prevState[key] }))\n  }\n\n  const handleImageUpload = async e => {\n    setImageLoading(true)\n    setPaletteImage({\n      url: URL.createObjectURL(e.target.files[0]),\n      name: null,\n      username: null\n    })\n\n    const res = await fetch(\"https://image-palette.now.sh\", {\n      method: \"POST\",\n      body: e.target.files[0]\n    })\n    const palette = await res.json()\n\n    setImageLoading(false)\n\n    setPalette(palette)\n    setPinnedColors(resetPinned)\n    const availableCombos = getAllCombos(palette, contrastRatio)\n    setAvailableCombos(availableCombos)\n    const newCombo = generateRandomPalette(\n      palette,\n      resetPinned,\n      null,\n      availableCombos\n    )\n    set(newCombo)\n  }\n\n  const handleBorderWidthChange = e => setBorderWidth(parseInt(e.target.value))\n  const handleBoxPaddingChange = e => setBoxPadding(parseInt(e.target.value))\n\n  const handleFetchFromUnsplash = async () => {\n    setImageLoading(true)\n    const res = await fetch(\"https://unsplash-palette.now.sh\")\n    const { colors, url, name, username } = await res.json()\n    setImageLoading(false)\n    setPalette(colors)\n    setPinnedColors(resetPinned)\n    const availableCombos = getAllCombos(colors, contrastRatio)\n    setAvailableCombos(availableCombos)\n    const newCombo = generateRandomPalette(\n      palette,\n      resetPinned,\n      null,\n      availableCombos\n    )\n    set(newCombo)\n    setPaletteImage({ url, name, username })\n  }\n\n  const handlePalxColor = e => {\n    setPalxColor(e.target.value)\n  }\n\n  const handleUsePalx = () => {\n    const newPaletteObj = palx(palxColor)\n\n    const newPalette = reduce(\n      newPaletteObj,\n      (acc, curr) => {\n        return isArray(curr) ? [...acc, ...curr] : acc\n      },\n      []\n    )\n    setPalette(newPalette)\n    setPinnedColors(resetPinned)\n    const availableCombos = getAllCombos(newPalette, contrastRatio)\n    setAvailableCombos(availableCombos)\n    const newCombo = generateRandomPalette(\n      newPalette,\n      resetPinned,\n      null,\n      availableCombos\n    )\n    set(newCombo)\n  }\n\n  const handlePaletteColorClick = (color, index) => {\n    const comboColorProp = findKey(currentCombination, c => c === color)\n    if (comboColorProp) {\n      stop()\n      setCurrentComboProp(comboColorProp)\n    }\n    setPickerColor({ color, index })\n  }\n\n  const handleSetEditColor = color => {\n    isRunning && stop()\n\n    setPickerColor({ color, index: currentPickerColor.index })\n\n    const updatedPalette = [...palette]\n    updatedPalette[currentPickerColor.index] = color\n    setPalette(updatedPalette)\n\n    if (currentComboProp) {\n      set({ ...currentCombination, [currentComboProp]: color })\n    }\n\n    debouncedUpdateCombos(updatedPalette, contrastRatio, setAvailableCombos)\n  }\n\n  const handleContrastRatioChange = e => {\n    const newContrastRatio = toNumber(e.target.value)\n    setContrastRatio(newContrastRatio)\n    const availableCombos = getAllCombos(palette, newContrastRatio)\n    setAvailableCombos(availableCombos)\n  }\n\n  const handleActiveTab = value => () => setActiveTab(value)\n\n  const handleColorClick = (color, key) => {\n    isRunning && stop()\n    setCurrentComboProp(key)\n    const paletteIndex = palette.findIndex(p => p === color)\n    setPickerColor({ color, index: paletteIndex })\n  }\n\n  const colorParentBgContrastValue = getContrastScore(\n    currentCombination.color,\n    currentCombination.parentBg\n  )\n\n  const controlColor =\n    colorParentBgContrastValue < 4.5\n      ? currentCombination.bg\n      : currentCombination.color\n\n  const handleColorBoxAdd = newPalette => {\n    setPalette(prev => [...prev, ...newPalette])\n  }\n\n  const handleColorBoxReplace = newPalette => {\n    setPalette(newPalette)\n  }\n\n  const handlePaletteImport = () => {\n    try {\n      const newPalette = JSON.parse(importValue)\n\n      newPalette.map(c => {\n        if (!isHex(c)) {\n          throw Error(\"Invalid Hex code provided\")\n        }\n      })\n      setPalette(newPalette)\n    } catch (error) {\n      setImportError(true)\n    }\n  }\n\n  return (\n    <Div\n      bg=\"white\"\n      display=\"flex\"\n      flexWrap=\"wrap\"\n      width={1}\n      position=\"relative\"\n      style={{\n        overflow: \"hidden\",\n        filter:\n          colorFilter === \"none\"\n            ? \"none\"\n            : `url(/static/filters.svg#${colorFilter})`\n      }}\n    >\n      <Div width={[1]}>\n        <Div pt={3} px={3} mb={3} textAlign=\"center\">\n          <TextButton\n            onClick={handleActiveTab(\"url\")}\n            bg=\"transparent\"\n            mr={3}\n            fontWeight={700}\n            fontSize={2}\n            color={activeTab === \"url\" ? \"blue.4\" : \"inherit\"}\n          >\n            URL\n          </TextButton>\n          <TextButton\n            onClick={handleActiveTab(\"palx\")}\n            bg=\"transparent\"\n            mr={3}\n            fontWeight={700}\n            fontSize={2}\n            color={activeTab === \"palx\" ? \"blue.4\" : \"inherit\"}\n          >\n            Palx\n          </TextButton>\n\n          <TextButton\n            onClick={handleActiveTab(\"colorbox\")}\n            bg=\"transparent\"\n            mr={3}\n            fontWeight={700}\n            fontSize={2}\n            color={activeTab === \"colorbox\" ? \"blue.4\" : \"inherit\"}\n          >\n            ColorBox\n          </TextButton>\n          <TextButton\n            onClick={handleActiveTab(\"image\")}\n            bg=\"transparent\"\n            mr={3}\n            fontWeight={700}\n            fontSize={2}\n            color={activeTab === \"image\" ? \"blue.4\" : \"inherit\"}\n          >\n            Image\n          </TextButton>\n          <TextButton\n            onClick={handleActiveTab(\"text\")}\n            bg=\"transparent\"\n            mr={3}\n            fontWeight={700}\n            fontSize={2}\n            display='none'\n            color={activeTab === \"text\" ? \"blue.4\" : \"inherit\"}\n          >\n            Json\n          </TextButton>\n        </Div>\n        <TextButton\n          display={[\"none\", \"block\"]}\n          position=\"absolute\"\n          top={0}\n          right={0}\n          fontWeight={700}\n          fontSize={2}\n          p={3}\n          onClick={() => togglePaletteModal(true)}\n        >\n          Export \n        </TextButton>\n\n        {activeTab === \"url\" && (\n          <Div px={3} py={0} mx=\"auto\" maxWidth=\"32rem\">\n            <SiteFetch onSubmit={handleSiteFetch} />\n          </Div>\n        )}\n\n        {activeTab === \"image\" && (\n          <>\n            <Flex maxWidth=\"32rem\" mx=\"auto\" mt={3} mb={2} px={3}>\n              <Div>\n                <Input\n                  id=\"imageUpload\"\n                  border=\"1px solid rgba(0,0,0,.1)\"\n                  py={3}\n                  width={1}\n                  pl={3}\n                  key={imageName}\n                  type=\"file\"\n                  accept=\".png, .jpg, .jpeg\"\n                  onChange={handleImageUpload}\n                  css={{ display: \"none\" }}\n                />\n                <Label\n                  display=\"block\"\n                  color=\"gray.0\"\n                  bg=\"gray.8\"\n                  fontSize={2}\n                  borderRadius={2}\n                  py={2}\n                  px={3}\n                  width=\"auto\"\n                  fontWeight={700}\n                  textAlign=\"center\"\n                  css={{ whiteSpace: \"nowrap\", cursor: \"pointer\" }}\n                  htmlFor=\"imageUpload\"\n                >\n                  Upload image\n                </Label>\n              </Div>\n              <Div>\n                <P textAlign=\"center\">or</P>\n              </Div>\n              <Div ml=\"auto\">\n                <Button\n                  color=\"white\"\n                  bg=\"gray.3\"\n                  fontSize={2}\n                  borderRadius={2}\n                  py={2}\n                  px={3}\n                  ml=\"auto\"\n                  display=\"flex\"\n                  width={\"auto\"}\n                  border=\"none\"\n                  fontWeight={700}\n                  css={{\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    cursor: \"pointer\",\n                    whiteSpace: \"nowrap\"\n                  }}\n                  onClick={handleFetchFromUnsplash}\n                >\n                  <Icon viewBox=\"0 0 123 123\" size={16} type=\"unsplash\" />\n                  <Span pl={2}>Unsplash photo</Span>\n                </Button>\n              </Div>\n            </Flex>\n\n            {imageLoading && (\n              <Flex width={1}>\n                <LoadingBars />\n                <P ml={2}>Fetching Palette</P>\n              </Flex>\n            )}\n\n            {paletteImage && (\n              <>\n                <Flex px={3}>\n                  <TextButton ml=\"auto\" onClick={handleClearPalette}>\n                    Clear Image\n                  </TextButton>\n                </Flex>\n\n                <Div maxWidth={320} mx=\"auto\">\n                  <Img src={paletteImage.url} />\n                  {paletteImage.name && (\n                    <P color=\"gray.5\" fontSize={0}>\n                      Photo by{\" \"}\n                      <TextLink\n                        href={`https://unsplash.com/@${paletteImage.username}`}\n                      >\n                        {paletteImage.name}\n                      </TextLink>{\" \"}\n                      on{\" \"}\n                      <TextLink href=\"https://unsplash.com/\">Unsplash</TextLink>\n                    </P>\n                  )}\n                </Div>\n              </>\n            )}\n          </>\n        )}\n\n        <Div>\n          <Div\n            fontWeight={700}\n            mt={3}\n            mb={2}\n            display=\"flex\"\n            flexWrap=\"wrap\"\n            alignItems=\"center\"\n          >\n            {activeTab === \"palx\" && (\n              <Form\n                maxWidth=\"32rem\"\n                mx=\"auto\"\n                mb={3}\n                px={3}\n                borderRadius={2}\n                style={{ overflow: \"hidden\" }}\n              >\n                <Flex\n                  overflow=\"hidden\"\n                  borderRadius={2}\n                  css={{ overflow: \"hidden\" }}\n                >\n                  <TextInput\n                    width={48}\n                    fontSize={2}\n                    py={3}\n                    readOnly\n                    border={0}\n                    bg={palxColor}\n                  />\n                  <TextInput\n                    type=\"text\"\n                    value={palxColor}\n                    onChange={handlePalxColor}\n                    fontSize={2}\n                    fontWeight={700}\n                    py={3}\n                    px={3}\n                    width={[3 / 4]}\n                    type=\"url\"\n                    border=\"0\"\n                    bg=\"gray.8\"\n                    borderRadius={0}\n                  />\n                  <Button\n                    py={3}\n                    width={1 / 4}\n                    bg=\"gray.3\"\n                    fontSize={2}\n                    color=\"white\"\n                    fontWeight={700}\n                    border=\"none\"\n                    style={{ cursor: \"pointer\", minWidth: 128 }}\n                    onClick={handleUsePalx}\n                  >\n                    Generate\n                  </Button>{\" \"}\n                </Flex>\n              </Form>\n            )}\n\n            {activeTab === \"colorbox\" && (\n              <Colorbox\n                onAddPalette={handleColorBoxAdd}\n                onReplacePalette={handleColorBoxReplace}\n              />\n            )}\n\n            {activeTab === \"text\" && (\n              <Div px={3} mx=\"auto\" maxWidth=\"32rem\">\n                {importError && (\n                  <P color=\"red.4\">\n                    There is something wrong with the JSON provided\n                  </P>\n                )}\n\n                <Textarea\n                  border=\"1px solid\"\n                  borderColor=\"gray.8\"\n                  p={3}\n                  width={1}\n                  borderRadius={1}\n                  value={importValue}\n                  css={`\n                    resize: vertical;\n                    min-height: 128px;\n                  `}\n                  onChange={e => setImportValue(e.target.value)}\n                />\n                <TextButton onClick={handlePaletteImport}>\n                  Import Palette\n                </TextButton>\n              </Div>\n            )}\n\n            <Div px={[3, 5, 6]}>\n              <Palette\n                palette={palette}\n                pickerColor={currentPickerColor}\n                activeColors={Object.values(currentCombination)}\n                onClick={handlePaletteColorClick}\n                onAddColor={handleAddColor}\n              />\n              <Div textAlign=\"center\" my={3}>\n                <TextButton\n                  fontSize={1}\n                  bg=\"transparent\"\n                  mx={2}\n                  onClick={handleClearPalette}\n                >\n                  Clear palette\n                </TextButton>\n                <TextButton\n                  mx={2}\n                  fontSize={1}\n                  color=\"gray.0\"\n                  onClick={onShowCombinations}\n                >\n                  View {availableCombos.length} accessible combinations\n                </TextButton>\n              </Div>\n              <Div maxWidth=\"48rem\" mx=\"auto\">\n                <CombinationTools\n                  currentCombination={currentCombination}\n                  pinnedColors={pinnedColors}\n                  onPrevious={handlePrevious}\n                  onNext={handleNext}\n                  onPinColor={handlePinColor}\n                  onLike={handleLike}\n                  onAutoCycling={handleAutoCycling}\n                  isRunning={isRunning}\n                  onColorClick={handleColorClick}\n                />\n              </Div>\n              <Div display=\"none\" dataName=\"stats\">\n                <Dl\n                  color={controlColor}\n                  display=\"flex\"\n                  maxWidth=\"24rem\"\n                  width={1}\n                  mb={0}\n                >\n                  <Dt fontSize={2} width={3 / 4}>\n                    Accessible Combinations\n                  </Dt>\n                  <Dd\n                    fontSize={2}\n                    width={1 / 4}\n                    fontWeight={800}\n                    ml={0}\n                    textAlign=\"right\"\n                  >\n                    {availableCombos.length}\n                  </Dd>\n                </Dl>\n                <Dl\n                  color={controlColor}\n                  display=\"flex\"\n                  maxWidth=\"24rem\"\n                  width={1}\n                  mb={0}\n                  pb={3}\n                >\n                  <Dt fontSize={2} width={3 / 4}>\n                    Combos with Parent Bg\n                  </Dt>\n                  <Dd\n                    fontSize={2}\n                    width={1 / 4}\n                    fontWeight={800}\n                    ml={0}\n                    textAlign=\"right\"\n                  >\n                    {(availableCombos.length * palette.length).toLocaleString()}\n                  </Dd>\n                </Dl>\n              </Div>\n\n              {paletteModalIsOpen && (\n                <PaletteModal\n                  togglePaletteModal={togglePaletteModal}\n                  palette={palette}\n                />\n              )}\n            </Div>\n          </Div>\n\n          {currentPickerColor.color && (\n            <OutsideClickHandler\n              onOutsideClick={() => {\n                setPickerColor({\n                  color: null,\n                  index: null\n                })\n                setCurrentComboProp(null)\n              }}\n            >\n              <ColorPicker\n                currentColor={currentPickerColor.color}\n                onChange={handleSetEditColor}\n                onRemoveColor={handleRemoveColor}\n              />\n            </OutsideClickHandler>\n          )}\n        </Div>\n      </Div>\n      {!isEmpty(currentCombination) && (\n        <Div width={[1]} bg={currentCombination.parentBg}>\n          <Div\n            borderTop=\"1px solid\"\n            borderColor={controlColor}\n            style={{ opacity: 0.2 }}\n          />\n          <PlayerControls\n            currentCombination={currentCombination}\n            pinnedColors={pinnedColors}\n            onPrevious={handlePrevious}\n            onNext={handleNext}\n            onPinColor={handlePinColor}\n            onLike={handleLike}\n            onAutoCycling={handleAutoCycling}\n            isRunning={isRunning}\n            onColorClick={handleColorClick}\n          />\n          <Preview\n            borderWidth={borderWidth}\n            boxPadding={boxPadding}\n            currentCombination={currentCombination}\n          />\n          <Div bg=\"white\" color=\"gray.0\" pb={3}>\n            <Div\n              mb={4}\n              borderTop=\"1px solid\"\n              borderColor={controlColor}\n              style={{ opacity: 0.175 }}\n            />\n            <Div\n              px={[3, 4]}\n              pt={4}\n              maxWidth=\"54rem\"\n              mx=\"auto\"\n              style={{ overflowX: \"scroll\" }}\n            >\n              <H4 fontSize={2}>Docs</H4>\n              <ColorTable colors={palette} />\n              <Div mt={3}textAlign='center'>\n                <TextButton\n                  fontWeight={700}\n                  fontSize={2}\n                  border='1px solid'\n                  borderColor='gray.0'\n                  borderRadius={2}\n                  p={3}\n                  onClick={() => togglePaletteModal(true)}\n                >\n                Export Palette\n              </TextButton>\n              </Div>\n            </Div>\n            <Div px={[3, 4]} pt={5} maxWidth=\"48rem\" mx=\"auto\">\n              <H4 fontSize={2}>Settings</H4>\n              <Form pt={4}>\n                <Fieldset border=\"0\" p={0}>\n                  <Legend fontWeight={700} fontSize={3}>\n                    Contrast Ratio\n                  </Legend>\n                  <Flex mx={-3} py={2}>\n                    <Flex px={3}>\n                      <Input\n                        type=\"radio\"\n                        name=\"contrastRatio\"\n                        value={3}\n                        onChange={handleContrastRatioChange}\n                        checked={contrastRatio === 3}\n                        mr={2}\n                      />\n                      <Label style={{ whiteSpace: \"nowrap\" }}>\n                        <Span fontWeight={800}>3 </Span>\n                        <Span fontSize={3}>AA large</Span>\n                      </Label>\n                    </Flex>\n                    <Flex px={3}>\n                      <Input\n                        type=\"radio\"\n                        name=\"contrastRatio\"\n                        value={4.5}\n                        onChange={handleContrastRatioChange}\n                        checked={contrastRatio === 4.5}\n                        mr={2}\n                      />\n                      <Label style={{ whiteSpace: \"nowrap\" }}>\n                        <Span fontWeight={800}>4.5 </Span>\n                        <Span fontSize={3}>AA</Span>\n                      </Label>\n                    </Flex>\n                    <Flex px={3}>\n                      <Input\n                        type=\"radio\"\n                        name=\"contrastRatio\"\n                        value={7}\n                        onChange={handleContrastRatioChange}\n                        checked={contrastRatio === 7}\n                        mr={2}\n                      />\n                      <Label style={{ whiteSpace: \"nowrap\" }}>\n                        <Span fontWeight={800}>7:1 </Span>\n                        <Span fontSize={2}>AAA</Span>\n                      </Label>\n                    </Flex>\n                  </Flex>\n                </Fieldset>\n              </Form>\n              <Div>\n                <ColorBlindFilter\n                  onChange={handleColorBlindFilter}\n                  currentValue={colorFilter}\n                />\n                <Div>\n                  <Label fontWeight={700} fontSize={2} mr={2} for=\"border-width\">\n                    Border width\n                  </Label>\n                  <Input\n                    id=\"border-width\"\n                    value={borderWidth}\n                    onChange={handleBorderWidthChange}\n                    type=\"number\"\n                    py={2}\n                    px={2}\n                    fontSize={2}\n                    fontWeight={600}\n                    borderRadius={2}\n                    border={\"1px solid \" + theme.colors.gray[8]}\n                    min={0}\n                    max={32}\n                    step={1}\n                  />\n                </Div>\n                <Div mt={2}>\n                  <Label fontWeight={700} fontSize={2} mr={2} for=\"box-padding\">\n                    Box Padding\n                  </Label>\n                  <Input\n                    id=\"box-padding\"\n                    value={boxPadding}\n                    onChange={handleBoxPaddingChange}\n                    type=\"number\"\n                    py={2}\n                    px={2}\n                    fontSize={2}\n                    fontWeight={600}\n                    borderRadius={2}\n                    border={\"1px solid \" + theme.colors.gray[8]}\n                    min={0}\n                    max={32}\n                    step={1}\n                  />\n                </Div>\n              </Div>\n              <Div py={4} bg=\"white\">\n                <Likes\n                  likes={likes}\n                  onSelectLike={handleViewLike}\n                  onRemoveLike={handleRemoveLike}\n                  onClearLikes={handleClearLikes}\n                />\n              </Div>\n            </Div>\n          </Div>\n          <Footer\n            bg=\"white\"\n            display=\"flex\"\n            py={4}\n            px={4}\n            borderTop=\"1px solid rgba(0,0,0,.1)\"\n          >\n            <Div>\n              <A\n                display=\"block\"\n                href=\"https://cloudflare.design\"\n                fontWeight={700}\n                fontSize={3}\n              >\n                <Logo variant='mark' /> \n                Cloudflare Design\n\n              </A>\n\n              <P fontSize={2} mt={1} mb={0}>\n                We're growing our team! If you're interested in joining us, checkout <A>our open positions</A>. \n              </P>\n            </Div>\n\n            <A\n              href=\"https://github.com/cloudflare-design\"\n              ml=\"auto\"\n              fontSize={2}\n              color=\"blue.4\"\n              display=\"block\"\n              fontWeight={700}\n            >\n              GitHub\n            </A>\n          </Footer>\n        </Div>\n      )}\n    </Div>\n  )\n}\n\nconst Index = () => {\n  const [palette, setPalette] = useState(sortPalette(defaultPalette))\n  const [availableCombos, setAvailableCombos] = useState(() =>\n    getAllCombos(defaultPalette, 4.5)\n  )\n\n  const [showCombinations, toggleShowCombinations] = useState(false)\n  return showCombinations ? (\n    <Combinations\n      availableCombos={availableCombos}\n      onHideCombinations={() => toggleShowCombinations(false)}\n    />\n  ) : (\n    <MainUI\n      palette={palette}\n      setPalette={setPalette}\n      availableCombos={availableCombos}\n      setAvailableCombos={setAvailableCombos}\n      onShowCombinations={() => toggleShowCombinations(true)}\n    />\n  )\n}\n\nexport default Index\n"],"mappings":"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A;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAajBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAkBA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAKA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;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","sourceRoot":""}