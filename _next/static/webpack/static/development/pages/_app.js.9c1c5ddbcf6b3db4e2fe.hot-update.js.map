{"version":3,"file":"static/webpack/static/development/pages/_app.js.9c1c5ddbcf6b3db4e2fe.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from \"next/app\"\nimport Head from \"next/head\"\nimport React from \"react\"\nimport { hydrate, injectGlobal } from \"react-emotion\"\nimport createStore from \"unistore\"\nimport { Provider } from \"unistore/react\"\nimport { ThemeProvider } from \"emotion-theming\"\nimport { initGA, logPageView } from \"../utils/analytics\"\nimport { get, set } from \"idb-keyval\"\n\nimport theme from \"../theme\"\n\nconst defaultState = {\n  pageData: {}\n}\n\nconst getState = async (store, defaultState) => {\n  if (typeof window !== \"undefined\") {\n    const state = await get(\"state\")\n    return store.setState({ ...state })\n  }\n  return defaultState\n}\n\nconst store = createStore(defaultState)\n\nif (typeof window !== \"undefined\") {\n  hydrate(window.__NEXT_DATA__.ids)\n  initGA()\n  store.subscribe(async state => await set(\"state\", state))\n  getState(store, defaultState)\n}\n\ninjectGlobal`\n  body {\n    margin: 0;\n    font-family: ${theme.font.sansSerif};\n    background-color: ${theme.colors.gray[9]};\n  }\n`\n\nexport default class MyApp extends App {\n  componentDidMount() {\n    logPageView()\n  }\n\n  render() {\n    const { Component, pageProps } = this.props\n\n    return (\n      <Container>\n        <Head>\n          <title>Color - Cloudflare Design</title>\n          <meta\n            name=\"description\"\n            content=\"A color palette tool for interface design\"\n          />\n        </Head>\n        <ThemeProvider theme={theme}>\n          <Provider store={store}>\n            <Component {...pageProps} />\n          </Provider>\n        </ThemeProvider>\n      </Container>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AADA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAOA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAxBA;AACA;AADA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}