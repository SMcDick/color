{"version":3,"file":"static/webpack/static/development/pages/index.js.c48e622a548c15b0acda.hot-update.js","sources":["webpack:///./components/ButtonPrimary.js","webpack:///./components/Colorbox.js"],"sourcesContent":["import React from \"react\"\nimport styled from 'react-emotion'\n\nimport {\n  space,\n  width,\n  maxWidth,\n  display,\n  alignItems,\n  fontSize,\n  fontWeight,\n  lineHeight,\n  textAlign,\n  color,\n  borders,\n  borderColor,\n  borderRadius\n} from \"styled-system\"\n\nconst Button = styled.button(\n  space,\n  width,\n  maxWidth,\n  display,\n  alignItems,\n  fontSize,\n  fontWeight,\n  lineHeight,\n  textAlign,\n  color,\n  borders,\n  borderColor,\n  borderRadius,\n  {\n    boxSizing: \"border-box\",\n    fontFamily: \"inherit\",\n    overflow: \"visible\",\n    textTransform: \"none\",\n    webkitAppearance: \"button\",\n    transition: \"background-color .25s ease-in\",\n    \":hover\": {\n      backgroundColor: \"rgba(255,255,255,1)\",\n      cursor: \"pointer\"\n    }\n  }\n)\n\nButton.defaultProps = {\n  bg: \"rgba(255,255,255,.7)\",\n  display: \"inline-flex\",\n  alignItems: \"center\",\n  fontSize: \"100%\",\n  lineHeight: 1,\n  m: 0,\n  textAlign: \"center\"\n}\n\nconst ButtonPrimary = ({ button, iconSize, ...props }) => {\n  return (\n    <Button {...props}>\n      {props.align === \"left\" && <Icon size={iconSize} type={button} />}\n      <Span height={16} display=\"inline-block\" px={1}>\n        {props.children}\n      </Span>\n      {props.align === \"right\" && <Icon size={16} type={button} />}\n    </Button>\n  )\n}\n\nButtonPrimary.defaultProps = {\n  borderRadius: 2,\n  border: \"1px solid transparent\",\n  py: 2,\n  px: 3,\n  fontSize: 2,\n  button: \"left\",\n  children: \"Click\",\n  align: \"left\",\n  iconSize: 16\n}\n\nexport default ButtonPrimary\n","import React, { useState, useEffect } from \"react\"\nimport generate from \"../utils/colorbox\"\n\nconst CURVES = [\n  { label: \"Quad - EaseIn\", value: \"easeInQuad\" },\n  { label: \"Quad - EaseOut\", value: \"easeOutQuad\" },\n  { label: \"Quad - EaseInOut\", value: \"easeInOutQuad\" },\n  { label: \"Quart - EaseIn\", value: \"easeInQuart\" },\n  { label: \"Quart - EaseOut\", value: \"easeOutQuart\" },\n  { label: \"Quart - EaseInOut\", value: \"easeInOutQuart\" },\n  { label: \"Sine - EaseIn\", value: \"easeInSine\" },\n  { label: \"Sine - EaseOut\", value: \"easeOutSine\" },\n  { label: \"Sine - EaseInOut\", value: \"easeInOutSine\" },\n  { label: \"Cubic - EaseIn\", value: \"easeInCubic\" },\n  { label: \"Cubic - EaseOut\", value: \"easeOutCubic\" },\n  { label: \"Cubic - EaseInOut\", value: \"easeInOutCubic\" },\n  { label: \"Expo - EaseIn\", value: \"easeInExpo\" },\n  { label: \"Expo - EaseOut\", value: \"easeOutExpo\" },\n  { label: \"Expo - EaseInOut\", value: \"easeInOutExpo\" },\n  { label: \"Quint - EaseIn\", value: \"easeInQuint\" },\n  { label: \"Quint - EaseOut\", value: \"easeOutQuint\" },\n  { label: \"Quint - EaseInOut\", value: \"easeInOutQuint\" },\n  { label: \"Circ - EaseIn\", value: \"easeInCirc\" },\n  { label: \"Circ - EaseOut\", value: \"easeOutCirc\" },\n  { label: \"Circ - EaseInOut\", value: \"easeInOutCirc\" },\n  { label: \"Back - EaseIn\", value: \"easeInBack\" },\n  { label: \"Back - EaseOut\", value: \"easeOutBack\" },\n  { label: \"Back - EaseInOut\", value: \"easeInOutBack\" },\n  { label: \"Linear\", value: \"linear\" }\n]\n\nconst generateSpecs = ({\n  steps,\n  hueStart,\n  hueEnd,\n  hueCurve,\n  satStart,\n  satEnd,\n  satCurve,\n  satRate,\n  lumStart,\n  lumEnd,\n  lumCurve\n}) => ({\n  specs: {\n    steps,\n    hue_start: hueStart,\n    hue_end: hueEnd,\n    hue_curve: hueCurve,\n    sat_start: satStart,\n    sat_end: satEnd,\n    sat_curve: satCurve,\n    sat_rate: satRate,\n    lum_start: lumStart,\n    lum_end: lumEnd,\n    lum_curve: lumCurve,\n    modifier: 10\n  }\n})\n\nconst Colorbox = ({ onAddPalette }) => {\n  const [form, setForm] = useState({\n    steps: 11,\n    hueStart: 34,\n    hueEnd: 230,\n    hueCurve: \"easeInExpo\",\n    satStart: 4,\n    satEnd: 90,\n    satCurve: \"easeOutQuad\",\n    satRate: 130,\n    lumStart: 100,\n    lumEnd: 53,\n    lumCurve: \"easeOutQuad\"\n  })\n  const [palette, setPalette] = useState([])\n\n  const handleInput = e => {\n    const target = e.target\n    const name = target.name\n    const rawValue = target.value\n    const numValue = parseInt(rawValue)\n    const finalValue = isNaN(numValue) ? rawValue : numValue\n    setForm(prev => ({ ...prev, [name]: finalValue }))\n  }\n\n  const handleAddToPalette = () => {\n    const paletteHexes = palette.map(p => p.hex)\n    onAddPalette(paletteHexes)\n  }\n\n  useEffect(\n    () => {\n      const specs = generateSpecs(form)\n      const palette = generate(specs)\n\n      setPalette(palette)\n    },\n    [form]\n  )\n\n  return (\n    <Div p={5}>\n      <Div>\n        <Div>\n          <P>Steps</P>\n          <Input\n            name=\"steps\"\n            type=\"number\"\n            value={form.steps}\n            onChange={handleInput}\n            min=\"3\"\n            max=\"21\"\n          />\n        </Div>\n        <Flex>\n          <Div>\n            <Div>\n              <P fontWeight={700}>Hue</P>\n              <P>Start</P>\n              <Input\n                name=\"hueStart\"\n                type=\"number\"\n                value={form.hueStart}\n                onChange={handleInput}\n                min=\"0\"\n                max=\"359\"\n              />\n            </Div>\n            <Div>\n              <P>End</P>\n              <Input\n                name=\"hueEnd\"\n                type=\"number\"\n                value={form.hueEnd}\n                onChange={handleInput}\n                min=\"0\"\n                max=\"359\"\n              />\n            </Div>\n\n            <Div>\n              <P>Curve</P>\n              <Select\n                name=\"hueCurve\"\n                value={form.hueCurve}\n                onChange={handleInput}\n              >\n                {CURVES.map((c, i) => (\n                  <option key={i} value={c.value}>\n                    {c.label}\n                  </option>\n                ))}\n              </Select>\n            </Div>\n          </Div>\n\n          <Div>\n            <Div>\n              <P fontWeight={700}>Saturation</P>\n              <P>Start</P>\n              <Input\n                name=\"satStart\"\n                type=\"number\"\n                value={form.satStart}\n                onChange={handleInput}\n                min=\"0\"\n                max=\"100\"\n              />\n            </Div>\n            <Div>\n              <P>End</P>\n              <Input\n                name=\"satEnd\"\n                type=\"number\"\n                value={form.satEnd}\n                onChange={handleInput}\n                min=\"0\"\n                max=\"100\"\n              />\n            </Div>\n\n            <Div>\n              <P>Curve</P>\n              <Select\n                name=\"satCurve\"\n                value={form.hueCurve}\n                onChange={handleInput}\n              >\n                {CURVES.map((c, i) => (\n                  <option key={i} value={c.value}>\n                    {c.label}\n                  </option>\n                ))}\n              </Select>\n            </Div>\n          </Div>\n\n          <Div>\n            <Div>\n              <P fontWeight={700}>Luminosity</P>\n              <P>Start</P>\n              <Input\n                name=\"satStart\"\n                type=\"number\"\n                value={form.lumStart}\n                onChange={handleInput}\n                min=\"0\"\n                max=\"100\"\n              />\n            </Div>\n            <Div>\n              <P>End</P>\n              <Input\n                name=\"satEnd\"\n                type=\"number\"\n                value={form.lumEnd}\n                onChange={handleInput}\n                min=\"0\"\n                max=\"100\"\n              />\n            </Div>\n\n            <Div>\n              <P>Curve</P>\n              <Select\n                name=\"satCurve\"\n                value={form.lumCurve}\n                onChange={handleInput}\n              >\n                {CURVES.map((c, i) => (\n                  <option key={i} value={c.value}>\n                    {c.label}\n                  </option>\n                ))}\n              </Select>\n            </Div>\n          </Div>\n        </Flex>\n      </Div>\n\n      <Flex>\n        {palette.map((p, i) => (\n          <Div\n            key={i}\n            width={24}\n            m={1}\n            css={`\n              height: 24px;\n              border-radius: 50%;\n            `}\n            bg={p.hex}\n          />\n        ))}\n      </Flex>\n\n      <ButtonPrimary icon='plus' bg='black' color='white' type=\"button\" onClick={handleAddToPalette}>\n        Add to palette\n      </ButtonPrimary>\n    </Div>\n  )\n}\n\nexport default Colorbox\n"],"mappings":"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","sourceRoot":""}